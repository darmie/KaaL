# KaaL System Component Manifest
#
# This file defines the components that root-task will spawn during system initialization.
# Components are spawned in the order listed here.

# System Initializer - First component spawned
# This is the "system_init" component that bootstraps the rest of the system
[[component]]
name = "system_init"
binary = "system-init"
type = "service"
priority = 255  # Highest priority
autostart = true
capabilities = [
    "process:create",      # Can spawn other processes
    "memory:allocate",     # Can allocate memory
    "ipc:*",              # Full IPC access
]

# Device Drivers - Low-level hardware access
[[component]]
name = "serial_driver"
binary = "serial-driver"
type = "driver"
priority = 200
autostart = true
capabilities = [
    "memory_map:0x09000000:4096",  # UART0 MMIO
    "interrupt:33",                 # UART0 IRQ
    "ipc:serial",                   # Serial IPC endpoint
]

[[component]]
name = "timer_driver"
binary = "timer-driver"
type = "driver"
priority = 200
autostart = true
capabilities = [
    "memory_map:0x0a003000:4096",  # Timer MMIO
    "interrupt:27",                 # Timer IRQ
    "ipc:timer",                    # Timer IPC endpoint
]

# System Services - Core OS services
[[component]]
name = "process_manager"
binary = "process-manager"
type = "service"
priority = 150
autostart = true
capabilities = [
    "process:create",
    "process:destroy",
    "memory:allocate",
    "ipc:procmgr",
]

[[component]]
name = "vfs_service"
binary = "vfs-service"
type = "service"
priority = 100
autostart = false  # Spawned on-demand
capabilities = [
    "ipc:vfs",
    "ipc:serial",    # For debug output
]

# Applications - User-facing programs
[[component]]
name = "shell"
binary = "shell"
type = "application"
priority = 50
autostart = false  # Spawned by system_init after drivers ready
capabilities = [
    "ipc:serial",
    "ipc:vfs",
    "ipc:procmgr",
]
